<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Select a WhatsApp bot to deploy on Bot.TalkDrove">
    <title>Select Bot - Bot.TalkDrove</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="../nav/app.css">
    <link rel="stylesheet" href="../styles/main.css">
    <style>
        
        :root {
            --primary: #4361ee;
            --primary-hover: #3a53d0;
            --secondary: #e6f0ff;
            --accent: #3f37c9;
            --neutral: #333333;
            --base-100: #ffffff;
            --base-200: #f8fafc;
            --base-300: #f1f5f9;
            --base-hamza: #4895ef;
            --loader: #f8fafc;
            --success: #4ade80;
            --error: #f87171;
            --loaderText: #1e293b;
        }

        [data-theme="dark"] {
            --primary: #4361ee;
            --primary-hover: #3a53d0;
            --secondary: #1e293b;
            --accent: #3f37c9;
            --neutral: #f8fafc;
            --base-100: #0f172a;
            --base-200: #1e293b;
            --base-300: #334155;
            --base-hamza: #1e293b;
            --loader: #0f172a;
            --loaderText: #f8fafc;
        }

        body {
            font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
            background: linear-gradient(135deg, var(--base-200), var(--base-300));
            color: var(--neutral);
            margin: 0;
            min-height: 100vh;
            transition: background-color 0.3s ease;
        }

        .header {
            background-color: var(--base-100);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border-bottom: 1px solid rgba(229, 231, 235, 0.2);
            padding: 1rem 1.5rem;
            position: sticky;
            top: 0;
            z-index: 50;
        }

        .header-content {
            max-width: 1280px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        h1 {
            font-size: 1.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary), var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin: 0;
        }

        .controls {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
            cursor: pointer;
            border: none;
            gap: 0.5rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--accent));
            color: white;
        }

        .btn-secondary {
            background-color: var(--base-200);
            color: var(--neutral);
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .search-container {
            max-width: 1280px;
            margin: 2rem auto 1rem;
            padding: 0 1.5rem;
        }

        .search-box {
            display: flex;
            gap: 0.5rem;
            background-color: var(--base-100);
            border: 1px solid rgba(229, 231, 235, 0.2);
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            width: 100%;
            max-width: 400px;
            margin: 0 auto;
        }

        .search-box input {
            flex: 1;
            border: none;
            background: none;
            outline: none;
            color: var(--neutral);
            font-size: 1rem;
            font-family: 'Inter', sans-serif;
        }

        .search-box input::placeholder {
            color: var(--neutral);
            opacity: 0.5;
        }

        .search-icon {
            color: var(--neutral);
            opacity: 0.5;
        }

        .bot-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.5rem;
            padding: 1.5rem;
            max-width: 1280px;
            margin: 0 auto;
        }

        .bot-card {
            background-color: var(--base-100);
            border-radius: 1rem;
            padding: 1.5rem;
            border: 1px solid rgba(229, 231, 235, 0.2);
            transition: all 0.2s ease;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .bot-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .bot-card.selected {
            border: 2px solid var(--primary);
            background-color: var(--secondary);
        }

        .bot-card.hidden {
            display: none;
        }

        .bot-name {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--neutral);
            margin: 0;
        }

        .bot-cost {
            font-size: 0.875rem;
            color: var(--neutral);
            opacity: 0.8;
        }

        .bot-icon {
            font-size: 2rem;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        .form-container {
            max-width: 1280px;
            margin: 2rem auto;
            padding: 0 1.5rem;
            text-align: center;
        }

        .hidden-select {
            display: none;
        }

        .no-results {
            text-align: center;
            color: var(--neutral);
            padding: 2rem;
            grid-column: 1 / -1;
            display: none;
        }

        .theme-toggle {
            background: none;
            border: none;
            color: var(--neutral);
            font-size: 1.5rem;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .theme-toggle:hover {
            color: var(--primary);
        }

        @media (max-width: 768px) {
            .bot-grid {
                grid-template-columns: 1fr;
                padding: 1rem;
            }

            .search-container {
                padding: 0 1rem;
                margin: 1rem auto;
            }

            .controls {
                gap: 0.5rem;
            }

            .btn {
                padding: 0.5rem;
            }

            .btn span {
                display: none;
            }
        }
                /* Updated navigation styles */
      .header-content {
        max-width: 1280px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 1.5rem;
    }

    .nav-controls {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    .profile-container {
        position: relative;
    }

    .profile-pic {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        border: 2px solid var(--primary);
        padding: 2px;
        background: var(--base-100);
    }

    .dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        background: var(--base-100);
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        min-width: 200px;
        display: none;
        z-index: 100;
        border: 1px solid var(--base-300);
        margin-top: 0.5rem;
    }

    .dropdown.show {
        display: block;
    }

    .dropdown-item {
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--neutral);
        text-decoration: none;
        transition: background-color 0.2s;
        cursor: pointer;
    }

    .dropdown-item:hover {
        background-color: var(--base-200);
    }

    .dropdown-divider {
        height: 1px;
        background-color: var(--base-300);
        margin: 0.5rem 0;
    }

    .btn-group {
        position: relative;
    }

    .btn-group .dropdown {
        left: 0;
        right: auto;
    }
    .bot-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
        margin-top: 0.5rem;
    }

    .bot-deployments {
        font-size: 0.875rem;
        color: var(--neutral);
        opacity: 0.8;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .bot-deployments i {
        color: var(--primary);
    }
    .bot-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        padding: 1.5rem;
        max-width: 1280px;
        margin: 0 auto;
    }

    .bot-card {
        background-color: var(--base-100);
        border-radius: 1rem;
        padding: 1.5rem;
        border: 1px solid rgba(229, 231, 235, 0.2);
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

    .bot-card.most-deployed {
        grid-column: 1 / -1;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        background: linear-gradient(135deg, var(--primary), var(--accent));
        color: white;
    }

    .bot-card.most-deployed .bot-icon,
    .bot-card.most-deployed .bot-cost i,
    .bot-card.most-deployed .bot-deployments i {
        color: white;
    }

    .bot-card.most-deployed .bot-info {
        color: rgba(255, 255, 255, 0.9);
    }

    .bot-card.popular {
        border: 2px solid var(--primary);
        transform: scale(1.02);
    }

    .bot-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
    }

    .top-badge,
    .popularity-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .top-badge {
        background-color: var(--primary);
        color: white;
    }

    .popularity-badge {
        background-color: var(--secondary);
        color: var(--primary);
    }

    .deployment-bar {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 4px;
        width: var(--deployment-percentage);
        background: linear-gradient(90deg, var(--primary), var(--accent));
        transition: width 0.3s ease;
    }

    .bot-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
        font-size: 0.875rem;
    }

    .bot-deployments {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .bot-icon {
        font-size: 1.5rem;
        color: var(--primary);
    }

    @media (max-width: 768px) {
        .bot-card.most-deployed {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .bot-grid {
            grid-template-columns: 1fr;
        }
    }

    /* Animation for new cards */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .bot-card {
        animation: fadeInUp 0.3s ease-out;
        animation-fill-mode: both;
    }

    .bot-card:nth-child(n) {
        animation-delay: calc(n * 0.1s);
    }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <h1><a class="logo" href="/dashboard">Host.TalkDrove</a></h1>            <nav class="nav-controls">
               
                <button id="deployBotBtn" class="btn btn-primary" onclick="window.location.href='/dashboard/new-bot'">
                    <i class="fas fa-plus"></i>
                    <span>Add a Bot</span>
                </button>
                <button id="themeToggle" class="btn btn-secondary">
                    <i class="fas fa-adjust"></i>
                </button>
        
                <div class="profile-container">
                    <img src="../Images/profile.webp" alt="Profile" class="profile-pic" id="profileBtn">
                    <div class="dropdown" id="profileDropdown">
                        <a href="/dashboard/my-bots" class="dropdown-item">
                            <i class="fas fa-robot"></i>
                            <span>My Bots</span>
                        </a>
                        <a href="/dashboard/wallet" class="dropdown-item">
                            <i class="fas fa-wallet"></i>
                            <span>Wallet</span>
                        </a>
                        <a href="/dashboard/settings" class="dropdown-item">
                            <i class="fas fa-cog"></i>
                            <span>Settings</span>
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="/logout" class="dropdown-item" id="logoutBtn">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Logout</span>
                        </a>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <main class="main">
        <div class="search-container">
            <div class="search-box">
                <i class="fas fa-search search-icon"></i>
                <input 
                    type="text" 
                    id="searchInput" 
                    placeholder="Search bots by name..."
                    oninput="filterBots()"
                >
            </div>
        </div>

       
    <form id="selectBotForm" action="/dashboard/select-bot/prepare-deployment" method="POST">
        <select id="botSelect" name="botId" required class="hidden-select">
            <option value="">Select a bot</option>
            <% bots.forEach(function(bot) { %>
                <option value="<%= bot.id %>"><%= bot.name %></option>
            <% }); %>
        </select>

        <div class="bot-grid">
            <% bots.forEach(function(bot, index) { %>
                <div 
                    class="bot-card <%= bot.popularity_tier %> <%= index === 0 ? 'most-deployed' : '' %>" 
                    data-bot-id="<%= bot.id %>" 
                    data-bot-name="<%= bot.name.toLowerCase() %>"
                    data-deployments="<%= bot.deployment_count %>"
                    onclick="selectBot(this, '<%= bot.id %>')"
                >
                    <div class="bot-header">
                        <i class="fas fa-robot bot-icon"></i>
                        <% if (index === 0) { %>
                            <div class="top-badge">
                                <i class="fas fa-crown"></i> Most Deployed
                            </div>
                        <% } %>
                        <% if (bot.popularity_tier === 'popular') { %>
                            <div class="popularity-badge">
                                <i class="fas fa-fire"></i> Popular
                            </div>
                        <% } %>
                    </div>
                    <div class="bot-name"><%= bot.name %></div>
                    <div class="bot-info">
                        <div class="bot-cost">
                            <i class="fas fa-coins"></i>
                            <%= bot.deployment_cost %> coins
                        </div>
                        <div class="bot-deployments">
                            <i class="fas fa-rocket"></i>
                            <%= bot.deployment_count %> deployments
                        </div>
                    </div>
                    <div class="deployment-bar" style="--deployment-percentage: <%= (bot.deployment_count / bots[0].deployment_count) * 100 %>%"></div>
                </div>
            <% }); %>
            <div class="no-results">No bots found matching your search</div>
        </div>

        <div class="form-container">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-check"></i>
                <span>Next</span>
            </button>
        </div>
    </form>
</main>

    <script>
        function selectBot(card, botId) {
            document.querySelectorAll('.bot-card').forEach(c => c.classList.remove('selected'));
            card.classList.add('selected');
            document.getElementById('botSelect').value = botId;
        }

        function filterBots() {
    const searchValue = document.getElementById('searchInput').value.toLowerCase();
    const botCards = document.querySelectorAll('.bot-card');
    let hasResults = false;
    let visibleCards = [];

    botCards.forEach(card => {
        const botName = card.getAttribute('data-bot-name');
        const deployments = parseInt(card.getAttribute('data-deployments'));
        
        if (botName.includes(searchValue)) {
            card.classList.remove('hidden');
            hasResults = true;
            visibleCards.push({card, deployments});
        } else {
            card.classList.add('hidden');
        }
    });
 // Re-sort visible cards by deployment count
 visibleCards.sort((a, b) => b.deployments - a.deployments);
    
    // Update classes based on new order
    visibleCards.forEach((item, index) => {
        item.card.classList.remove('most-deployed');
        if (index === 0 && visibleCards.length > 0) {
            item.card.classList.add('most-deployed');
        }
    });

            const noResults = document.querySelector('.no-results');
            noResults.style.display = hasResults ? 'none' : 'block';
        }

        function toggleTheme() {
            const html = document.documentElement;
            const themeToggle = document.getElementById('themeToggle');
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            
            themeToggle.innerHTML = newTheme === 'light' 
                ? '<i class="fas fa-moon"></i>' 
                : '<i class="fas fa-sun"></i>';
        }

        // Set initial theme based on user preference or system setting
        (function() {
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            const defaultTheme = savedTheme || (prefersDark ? 'dark' : 'light');
            
            document.documentElement.setAttribute('data-theme', defaultTheme);
            document.getElementById('themeToggle').innerHTML = defaultTheme === 'light' 
                ? '<i class="fas fa-moon"></i>' 
                : '<i class="fas fa-sun"></i>';
        })();
    </script>
    <script src="../nav/app.js"></script>
</body>
</html>